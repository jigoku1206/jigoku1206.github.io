[{"categories":["Life"],"contents":"台鋁MLD假日市集 很久沒有回高雄，受朋友之邀，第一次來到台鋁MLD假日市集。\n朋友是「迪波波義食館」的帥哥老闆，\n剛好也在這邊擺攤，很開心能夠品嚐到限量的珍珠提拉米蘇。\n甜而不膩的清爽口感，\n可惜是期間限定已成絕響（哭\n只好拜託帥哥老闆\n希望有機會能夠在店內享用到（笑\n","permalink":"https://jigoku1206.github.io/blog/life_mldmarket/","tags":["Photos","Life","Foods"],"title":"【高雄美食】 MLD台鋁市集一日限定！珍珠提拉米蘇～"},{"categories":["Program"],"contents":"最近在練習寫C++的類別(class)的相關應用\n不過剛好遇到一個狀況是需要讓某些變數具有唯獨性(Read-only)\n因為有些變數如果開放給外部權限修改\n那有可能會造成不可預期的錯誤\n為了避免這樣的狀況發生\n所以就練習了幾種方式來實現\n使用以下class做為範例：\n假設目前需要一個能夠存放一個物件的類別 其中有個變數為 Length\n為了不要讓外部能夠直接存取這個變數 我們必須將其放在私有成員中 然後在公有成員中撰寫可讓外部存取的方法\n1. 撰寫函式回傳變數的值： 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14  class Object { private: unsigned int Length = 0; public: Object(unsigned int len) { Length = len; }; public: unsigned int GetObjLength1(){ return Length; }; void GetObjLength2(unsigned int \u0026amp;len){ len = Length; }; };    外部可以透過公有成員的函式來存取變數： 0 1 2 3 4 5  Object obj(10); unsigned int lens; lens = obj.GetObjLength1(); obj.GetObjLength2(lens);   \n以上示範在公有成員中提供兩種函式， 兩種寫法都可以讓外部存取到Length的值。\n不過我認為這樣的寫法在外部使用仍然沒有很方便 於是上網找了一些方法嘗試後學會第二招\n使用property方法來實現 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14  class Object { private: unsigned int _Length = 0; public: Object(unsigned int len) { Length = len; }; public: int GetObjLength() const{ return _Length; }; __declspec(property(get = GetObjLength)) int Length; };     外部讀取變數的方式就可以透過兩個方法實現： 0 1 2 3 4 5  Object obj(10, 5); unsigned int lens; lens = obj.Length; lens = obj.GetObjLength();   \n此方法似乎是VC++的擴充功能， 能夠實現如同C# property的方法， 透過這個方法能夠使外部透過公有成員Length， 以更簡單的方式讀取變數， 且可以使得此變數具有唯讀性。\n雖然實現我想要的形式了， 但是公有成員卻同時有兩個方法能夠存取到Length， 雖然覺得開放兩個方法讀取也不錯， 不過總還是覺得有點累贅， 於是又不小心學會了第三招， 能夠漂亮實現我理想中的形式。\n使用初始化函式建立公有成員與私有成員的連結  0 1 2 3 4 5 6 7 8 9 10 11 12 13  class Object { private: unsigned int _Length = 0; public: Object(unsigned int len) : Length(_Length) { _Length = len; } public: const unsigned int \u0026amp;Length; };    透過以上方法外部讀取變數就會變成： 0 1 2 3 4  Object obj(10); unsigned int lens; lens = obj.Length;    實現的寫法簡單， 只要利用初始化將公有成員的常數指向私有成員， 就能輕鬆的實現變數的唯讀性。 也不像第二招會有兩個存取變數的方法， 個人偏好使用這樣的寫法。\n若需要多個唯讀變數的話， 可以參考以下範例：\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  class Object { private: unsigned int _Length = 0; unsigned int _Number = 0; public: Object(unsigned int len, unsigned int num) : Length(_Length), Number(_Number) { _Length = len; _Number = num; } public: const unsigned int \u0026amp;Length; const unsigned int \u0026amp;Number; };    這樣外部就可以存取兩個有唯讀性的變數囉~ 0 1 2 3 4 5 6  Object obj(10, 5); unsigned int lens; unsigned int num; lens = obj.Length; num = obj.Number;   \n以上自學記錄到此到一段落~ 如有說明錯誤或是任何問題， 歡迎留言與我討論！ 感謝大家賞文！\n","permalink":"https://jigoku1206.github.io/blog/cpp_readonly/","tags":["C++","Life","Foods"],"title":"C++：建立具有唯獨性變數(Read-only variable)的類別"}]